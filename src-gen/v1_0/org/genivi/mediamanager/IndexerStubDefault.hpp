/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core 3.1.3.v201507280808.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
/**
 * description: Indexer control interface. Allows administerial tasks for
                  the
 *   indexer backend, such as starting, stopping and requesting
                 
 *   status of the indexer.
                  For querying the database, please
 *   see
                  org.genivi.mediamanager.Browser
 */
#ifndef ORG_GENIVI_MEDIAMANAGER_Indexer_STUB_DEFAULT_HPP_
#define ORG_GENIVI_MEDIAMANAGER_Indexer_STUB_DEFAULT_HPP_


#include <v1_0/org/genivi/mediamanager/IndexerStub.hpp>
#include <sstream>

namespace v1_0 {
namespace org {
namespace genivi {
namespace mediamanager {

/**
 * Provides a default implementation for IndexerStubRemoteEvent and
 * IndexerStub. Method callbacks have an empty implementation,
 * remote set calls on attributes will always change the value of the attribute
 * to the one received.
 *
 * Override this stub if you only want to provide a subset of the functionality
 * that would be defined for this service, and/or if you do not need any non-default
 * behaviour.
 */
class IndexerStubDefault
    : public virtual IndexerStub {
public:
    IndexerStubDefault();

    IndexerStubRemoteEvent* initStubAdapter(const std::shared_ptr<IndexerStubAdapter> &_adapter);

    const CommonAPI::Version& getInterfaceVersion(std::shared_ptr<CommonAPI::ClientId> _client);

    virtual const ::v1_0::org::genivi::mediamanager::Indexer::IndexerStatus& getIndexerStatusAttribute();
    virtual const ::v1_0::org::genivi::mediamanager::Indexer::IndexerStatus& getIndexerStatusAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    virtual void setIndexerStatusAttribute(::v1_0::org::genivi::mediamanager::Indexer::IndexerStatus _value);

    /**
     * description: Get the path to the database file in the host file system.
                        
     *    This is the database file used by LMS to store metadata
     * param: output: Path to database file in host file system
     * deprecated: This is only used for testing purposes and will be removed
     */
    virtual void getDatabasePath(const std::shared_ptr<CommonAPI::ClientId> _client, getDatabasePathReply_t _reply);
    /**
     * description: If the indexer is currently IDLE or RUNNING
                          (see
     *   IndexerStatus), stop indexing and set IndexerStatus
                          to
     *   STOPPED.
                          If indexer is currently STOPPED, no action is
     *   taken
     */
    virtual void stopIndexing(const std::shared_ptr<CommonAPI::ClientId> _client, stopIndexingReply_t _reply);
    /**
     * description: If indexer is currently STOPPED (see IndexerStatus),
                         
     *   status is changed to RUNNING and indexing is RUNNING. If
                         
     *   the status is IDLE or RUNNING, no action is taken.
                          Note
     *   that the status may go from RUNNING to IDLE directly
                         
     *   after issuing this call, if no files are to be indexed
     */
    virtual void startIndexing(const std::shared_ptr<CommonAPI::ClientId> _client, startIndexingReply_t _reply);



protected:
    /**
     * description: Get the current status of the indexer.
     */
    virtual bool trySetIndexerStatusAttribute(::v1_0::org::genivi::mediamanager::Indexer::IndexerStatus _value);
    virtual bool validateIndexerStatusAttributeRequestedValue(const ::v1_0::org::genivi::mediamanager::Indexer::IndexerStatus &_value);
    class RemoteEventHandler: public virtual IndexerStubRemoteEvent {
    public:
        RemoteEventHandler(IndexerStubDefault *_defaultStub);

        /**
         * description: Get the current status of the indexer.
         */


    private:
        IndexerStubDefault *defaultStub_;
    };
private:
    IndexerStubDefault::RemoteEventHandler remoteEventHandler_;

    /**
     * description: Get the current status of the indexer.
     */
    ::v1_0::org::genivi::mediamanager::Indexer::IndexerStatus indexerStatusAttributeValue_;

    CommonAPI::Version interfaceVersion_;
};

} // namespace mediamanager
} // namespace genivi
} // namespace org
} // namespace v1_0

#endif // ORG_GENIVI_MEDIAMANAGER_Indexer_STUB_DEFAULT
